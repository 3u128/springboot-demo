pipeline {
    agent {
    	label 'linux_oci'
    }

    parameters {
        string(name: 'ENVIRONMENT', defaultValue: 'dev', description: 'Deploy to DEV by default. Choose between QA and PROD')
        // string(name: 'IP_DEV', defaultValue: '', description: 'aws tier')
        // string(name: 'IP_QA', defaultValue: '', description: 'aws tier')
        // string(name: 'IP_PROD', defaultValue: '', description: 'aws tier')
    }
    environment {
        SERVER_IP_DEV = credentials('ip-dev')
        SERVER_IP_QA = credentials('ip-qa')
        SERVER_IP_PROD = credentials('ip-prod')
    }

    stages {
        stage('Deploy to dev') {
            when {
                expression { params.ENVIRONMENT = 'dev' }
            }
            steps {
                sshagent(['aws-free-tier-amzlinux']) {
                    sh '''
                        [ -d ~/.ssh ] || mkdir ~/.ssh && chmod 0700 ~/.ssh
                        ssh-keyscan -t rsa,dsa $SERVER_IP_DEV >> ~/.ssh/known_hosts
                        scp stop-remove-start-docker-container.sh ec2-user@$SERVER_IP_DEV:/home/ec2-user
                        ssh ec2-user@$SERVER_IP_DEV 'sudo ./stop-remove-start-docker-container.sh'
                    '''
                }
            }
        }
        stage('Deploy to qa') {
            when {
                expression { params.ENVIRONMENT = 'qa' }
            }
            steps {
                // sshagent(['aws-free-tier-amzlinux']) {
                //     sh '''
                //         [ -d ~/.ssh ] || mkdir ~/.ssh && chmod 0700 ~/.ssh
                //         ssh-keyscan -t rsa,dsa $SERVER_IP_QA >> ~/.ssh/known_hosts
                //         scp stop-remove-start-docker-container.sh ec2-user@$SERVER_IP_QA:/home/ec2-user
                //         ssh ec2-user@$SERVER_IP_QA 'sudo ./stop-remove-start-docker-container.sh'
                //     '''
                // }
                sh 'echo qa'
            }
        }
        stage('Deploy to prod') {
            when {
                expression { params.ENVIRONMENT = 'prod' }
            }
            steps {
                sh 'echo prod'
            }
        }
    }
}