properties([pipelineTriggers([githubPush()])])
pipeline {
    agent {
    	label 'linux_oci'
    }
    
    environment {
        SONAR_USER_TOKEN  = credentials('sonar_springboot_token')
        SONAR_URL = 'http://jenkins.anyops.pp.ua:9000'
        SONAR_PROJECT = 'springboot-project'
        registry = "3u128/springboot-demo"
        registryCredential = 'docker-registry-credentials-id'
        dockerImage = 'springboot-demo'
    }

    stages {
        stage("build & SonarQube analysis") {
            steps {
                withSonarQubeEnv('sonar') {
                    sh 'mvn -N io.takari:maven:wrapper'
                    sh 'mvn -s settings.xml clean package sonar:sonar   -Dsonar.projectKey=$SONAR_PROJECT \
                                                                -Dsonar.host.url=$SONAR_URL \
                                                                -Dsonar.login=$SONAR_USER_TOKEN'
                }
            }
        }
        stage('Build maven') {
            steps {
                sh '''
                mvn package
                ls target/*.jar
                '''
            }
        }

        stage('Build docker') {
            steps {
                script {
                    dockerImage = docker.build registry
                }
            }
        }
        stage('Deploy our image') {
            steps{
                script {
                    docker.withRegistry(registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
    }
}